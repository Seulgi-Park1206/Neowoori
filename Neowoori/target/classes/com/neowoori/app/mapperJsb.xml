<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.neowoori.app.IDaojsb">
	<select id="jsbSelectlocation" resultType="com.neowoori.app.BStudy">
		select * from study
	</select>

		<!--Study 생성 -->
	<insert id="jsbCreateStudy">
		insert into study
		values(study_seq.nextval,#{param1},#{param2},#{param3},#{param4},#{param5},#{param6},#{param7},#{param8},#{param9},#{param10},#{param11},#{param12},#{param13},#{param14},#{param15})
	</insert>
	
		<!-- UserID로 get User info -->
	<select id="jsbGetUser" resultType="com.neowoori.app.BMembers">
		select * from members where USERID=#{param1}
	</select>
	
		<!-- UserId, StudyName으로 스터디장num확인-->
	<select id="jsbFindStudyMnum" resultType="Integer">
		select mNUM from study where uNUM=#{param1} and MNAME=#{param2}
	</select>
		
		<!-- UserId, mnum으로 meeting 생성 unum,mnum,30삽입-->
	<insert id="jsbCreateMeet">
		insert into meeting_study
		values(#{param1},#{param2},#{param3})
	</insert>
	
		<!-- StudyName으로 중복확인 확인-->
	<select id="jsbFindStudyName" resultType="Integer">
		select count(*) from study where MNAME=#{param1}
	</select>
	
			<!-- 스터디에 가입되었는지 확인-->
	<select id="jsbFindStudySignon" resultType="Integer">
		select count(*) from meeting_study where mNum=#{param1} and uNum=#{param2}
	</select>
		<!-- 0=가입안함,10=가입신청중,20=가입완료,30=해당 스터디장 -->
			<!-- 가입되었다면 state확인 -->
	<select id="jsbFindUserStateMeeting" resultType="Integer">
		select STATE from meeting_study where mNum=#{param1} and uNum=#{param2}
	</select>
		
			<!-- UserId, mnum으로 meeting 생성 unum,mnum,10삽입-->
	<insert id="jsbJoinStudy">
		insert into meeting_study
		values(#{param1},#{param2},10)
	</insert>
	
			<!-- UserId, mnum으로 meeting 제거 unum,mnum,10으로 검색-->
	<delete id="jsbCancelJoin">
		delete from meeting_study
		where unum=#{param1} and mnum=#{param2} and state=10
	</delete>
	
				<!-- UserId, mnum으로 meeting 제거 unum,mnum,10으로 검색-->
	<delete id="jsbJoinOut">
		delete from meeting_study
		where unum=#{param1} and mnum=#{param2} and state=20
	</delete>
	
				<!-- UserId, mnum으로 meeting 생성 unum,mnum,10삽입-->
	<insert id="jsbSendModalMsg"> <!-- msgNum,보낸Num,받는Num,내용,보낸날짜,상태=0 -->
		insert into message
		values(msg_seq.nextval,#{param1},#{param2},#{param3},sysdate,0)
	</insert>
	
			<!-- UserID로 get User Nick -->
	<select id="jsbGetUserNick" resultType="com.neowoori.app.BMembers">
		select * from members where uNick=#{param1}
	</select>
	
			<!-- Search ALL -->
	<select id="jsbListTypeOne" resultType="com.neowoori.app.jsbBListStudy">
		select e.uNick,f.*
		from members e right outer join(
		    select d.*, c.cnt
		    from study d left outer join(
		        select distinct a.mnum,nvl(b.cnts,'1') cnt
		        from meeting_study a left outer join(
		            select mnum, count(mnum)+1 cnts
		            from meeting_study
		            where state=20
		            group by mnum) b
		        on a.mnum = b.mnum
		        order by a.mnum) c
		    on d.mnum = c.mnum
		    order by d.mnum desc) f
		    on e.unum=f.unum
		order by f.mnum desc
		<!--select d.*, c.cnt from study d left outer join( select distinct a.mnum,nvl(b.cnt,'1') cnt from meeting_study a left outer join( select mnum, count(mnum)+1 as cnt from meeting_study where state=20 group by mnum) b on a.mnum = b.mnum order by a.mnum) c on d.mnum = c.mnum order by d.mnum desc -->
	</select>
	
	<select id="jsbListFindMeetState" resultType="Integer">
	select nvl(STATE,'0') state from meeting_study right outer join dual on mNum=#{param1} and uNum=#{param2}
	</select>
	
	<!-- 제목만 입력 -->
	<select id="jsbListTypeTwo" resultType="com.neowoori.app.jsbBListStudy">
	select e.uNick,f.*
	from members e right outer join(
	    select d.*, c.cnt
	    from study d left outer join(
	        select distinct a.mnum,nvl(b.cnts,'1') cnt
	        from meeting_study a left outer join(
	            select mnum, count(mnum)+1 cnts
	            from meeting_study
	            where state=20
	            group by mnum) b
	        on a.mnum = b.mnum
	        order by a.mnum) c
	    on d.mnum = c.mnum
	    order by d.mnum desc) f
	    on e.unum=f.unum
	where f.mName LIKE '%'||#{param1}||'%'
	order by f.mnum desc
	</select>
	
		<!-- 카테고리1만 -->
	<select id="jsbListTypethr" resultType="com.neowoori.app.jsbBListStudy">
	select e.uNick,f.*
	from members e right outer join(
	    select d.*, c.cnt
	    from study d left outer join(
	        select distinct a.mnum,nvl(b.cnts,'1') cnt
	        from meeting_study a left outer join(
	            select mnum, count(mnum)+1 cnts
	            from meeting_study
	            where state=20
	            group by mnum) b
	        on a.mnum = b.mnum
	        order by a.mnum) c
	    on d.mnum = c.mnum
	    order by d.mnum desc) f
	    on e.unum=f.unum
	where f.category1=#{param1}
	order by f.mnum desc
	</select>
	
		<!-- 카테고리 12 -->
	<select id="jsbListTypefor" resultType="com.neowoori.app.jsbBListStudy">
	select e.uNick,f.*
	from members e right outer join(
	    select d.*, c.cnt
	    from study d left outer join(
	        select distinct a.mnum,nvl(b.cnts,'1') cnt
	        from meeting_study a left outer join(
	            select mnum, count(mnum)+1 cnts
	            from meeting_study
	            where state=20
	            group by mnum) b
	        on a.mnum = b.mnum
	        order by a.mnum) c
	    on d.mnum = c.mnum
	    order by d.mnum desc) f
	    on e.unum=f.unum
	where f.category1=#{param1} and f.category2=#{param2}
	order by f.mnum desc
	</select>
	
		<!-- 모두다 입력 -->
	<select id="jsbListTypefiv" resultType="com.neowoori.app.jsbBListStudy">
	select e.uNick,f.*
	from members e right outer join(
	    select d.*, c.cnt
	    from study d left outer join(
	        select distinct a.mnum,nvl(b.cnts,'1') cnt
	        from meeting_study a left outer join(
	            select mnum, count(mnum)+1 cnts
	            from meeting_study
	            where state=20
	            group by mnum) b
	        on a.mnum = b.mnum
	        order by a.mnum) c
	    on d.mnum = c.mnum
	    order by d.mnum desc) f
	    on e.unum=f.unum
	where f.category1=#{param1} and f.category2=#{param2} and f.mName LIKE '%'||#{param3}||'%'
	order by f.mnum desc
	</select>
	
	<!-- 스터디 정보 가져오기 -->
	<select id="jsbGetStudyInfoInCate" resultType="com.neowoori.app.BJsbStudyInfo">
		select b.unick,a.* from study a, members b where a.unum=b.unum and a.category1=#{param1} and a.category2=#{param2}
	</select>
	
	<select id="jsbGetStudyInfoInCateONE" resultType="com.neowoori.app.BJsbStudyInfo">
		select b.unick,a.* from study a, members b where a.unum=b.unum and a.category1=#{param1}
	</select>
	
	<select id="jsbGetStudyInfo" resultType="com.neowoori.app.jsbBListStudy">
		select e.uNick,f.*
		from members e right outer join(
		    select d.*, c.cnt
		    from study d left outer join(
		        select distinct a.mnum,nvl(b.cnts,'1') cnt
		        from meeting_study a left outer join(
		            select mnum, count(mnum)+1 cnts
		            from meeting_study
		            where state=20
		            group by mnum) b
		        on a.mnum = b.mnum
		        order by a.mnum) c
		    on d.mnum = c.mnum
		    order by d.mnum desc) f
		    on e.unum=f.unum
		order by f.mnum desc
	</select>
		
		
	<!-- 메시지 영역 -->
	<select id="jsbReceiveMsgList" resultType="com.neowoori.app.jsbBMsgList">
		select d.uNick as recuNick, c.*
		from members d right outer join(
		    select a.*, b.uNick as senduNick
		    from message a left outer join(
		        select uNick, unum
		        from members )b
		    on a.sendunum=b.unum) c
		on c.receiveunum = d.unum
		where receiveunum=#{param1}
		order by c.msgnum desc
	</select>
	
	<select id="jsbSendMsgList" resultType="com.neowoori.app.jsbBMsgList">
		select d.uNick as recuNick, c.*
		from members d right outer join(
		    select a.*, b.uNick as senduNick
		    from message a left outer join(
		        select uNick, unum
		        from members )b
		    on a.sendunum=b.unum) c
		on c.receiveunum = d.unum
		where sendunum=#{param1}
		order by c.msgnum desc
	</select>
	
	<!-- 슬기 도움 영역 meetuser -->
	<select id="jsbMeetUserList" resultType="com.neowoori.app.jsbBMeetUserList">
		select a.unum,a.mnum, b.uNick, b.ugender, b.umail
		from meeting_study a, members b 
		where a.state=20 and a.unum=b.unum and a.mnum=#{param1}
	</select>
	
				<!-- UserId, mnum으로 meeting 제거 unum,mnum,10으로 검색-->
	<delete id="jsbMeetUserKick">
		delete from meeting_study
		where unum=#{param1} and mnum=#{param2} and state=20
	</delete>
	
		<select id="jsbBMeetUserCount" resultType="com.neowoori.app.jsbBMeetUserCount">
		select (select count(*) from meeting_study where state=10 and mnum=#{param1}) resOne,
		        (select count(*) from meeting_study where state=20 and mnum=#{param1}) resTwo
		        from dual
	</select>
	
	<select id="jsbMeetUserList2" resultType="com.neowoori.app.jsbBMeetUserList2">
		select a.unum,a.mnum, b.uNick, b.ugender, b.umail, a.state
		from meeting_study a, members b
        where (a.state=20 or a.state=10) and a.unum=b.unum and a.mnum=#{param1}
        order by a.state desc
	</select>
	
	<update id="jsbMeetUserAccept">
		update meeting_study set state=20 where unum=#{param1} and mnum=#{param2}
	</update>
	
	<delete id="jsbMeetUserCancel">
		delete from meeting_study where unum=#{param1} and mnum=#{param2} and state=10
	</delete>
	
	<select id="jsbMeetAcceptAva" resultType="com.neowoori.app.jsbBMeetUserAva">
		select mpersonnel, (select count(*)+1 from meeting_study where state=20 and mnum=#{param1}) meet
		from study
		where mnum=#{param1}
</select>

	<select id="jsbStudyAmdinboolean"  resultType="Integer">
		select count(*) count
		from study
		where unum=#{param1} and mnum=#{param2}
	</select>
	
	<select id="jsbStrudyCreateCount"  resultType="Integer">
		select count(*) count
		from study
		where unum=#{param1}
	</select>
	
		<select id="jsbQnaGetNum"  resultType="String">
			select writer
			from faq
			where faqnum=#{param1}
	</select>
	
	<select id="jsbPostFindUser" resultType="com.neowoori.app.jsbBPostFindUser">
		from study_post a, members b, meeting_study c
		where a.postnum=#{param1} and a.mnum=c.mnum and (c.state=20 or c.state=30) and c.unum=b.unum
		group by b.userId;
	</select>

	<select id="jsbOnlyGetUserNum"  resultType="Integer">
		select unum from members where userId=#{param1}
	</select>
</mapper>